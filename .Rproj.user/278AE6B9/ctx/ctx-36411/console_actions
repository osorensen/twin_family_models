{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2
    ],
    "data": [
        "\nR version 4.1.1 (2021-08-10) -- \"Kick Things\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(tidyverse)",
        "\u001B[30m── \u001B[1mAttaching packages\u001B[22m ─────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ──\u001B[39m\n",
        "\u001B[30m\u001B[32m✓\u001B[30m \u001B[34mggplot2\u001B[30m 3.3.5     \u001B[32m✓\u001B[30m \u001B[34mpurrr  \u001B[30m 0.3.4\n\u001B[32m✓\u001B[30m \u001B[34mtibble \u001B[30m 3.1.5     \u001B[32m✓\u001B[30m \u001B[34mdplyr  \u001B[30m 1.0.7\n\u001B[32m✓\u001B[30m \u001B[34mtidyr  \u001B[30m 1.1.4     \u001B[32m✓\u001B[30m \u001B[34mstringr\u001B[30m 1.4.0\n\u001B[32m✓\u001B[30m \u001B[34mreadr  \u001B[30m 2.0.2     \u001B[32m✓\u001B[30m \u001B[34mforcats\u001B[30m 0.5.1\u001B[39m\n",
        "\u001B[30m── \u001B[1mConflicts\u001B[22m ────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mfilter()\u001B[30m masks \u001B[34mstats\u001B[30m::filter()\n\u001B[31mx\u001B[30m \u001B[34mdplyr\u001B[30m::\u001B[32mlag()\u001B[30m    masks \u001B[34mstats\u001B[30m::lag()\u001B[39m\n",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(nlme)",
        "\nAttaching package: ‘nlme’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    collapse\n\n",
        "> ",
        "n3 <- 1000 # twin pairs",
        "> ",
        "n2 <- 2 # siblings in each twin pair (obviously)",
        "> ",
        "n1 <- 1 # measurements per twin",
        "> ",
        "varA2 <- 2 # additive genetic component (A)",
        "> ",
        "varC2 <- 1 # common environment component (C)",
        "> ",
        "varE2 <- .1 # unique environment component (E)",
        "> ",
        "CovA <- list(",
        "+ ",
        "  MZ = varA2 * matrix(1, nrow = 2, ncol = 2),",
        "+ ",
        "  DZ = varA2 * matrix(c(1, .5, .5, 1), nrow = 2, ncol = 2)",
        "+ ",
        ")",
        "> ",
        "CovC <- varC2 * matrix(1, nrow = 2, ncol = 2)",
        "> ",
        "dat <- tibble(",
        "+ ",
        "  i = seq_len(n3), # pair ID",
        "+ ",
        "  type = sample(c(\"DZ\", \"MZ\"), n3, replace = TRUE)",
        "+ ",
        ") %>% ",
        "+ ",
        "  uncount(n2, .id = \"j\") %>% ",
        "+ ",
        "  nest_by(i, type, .keep = TRUE) %>% ",
        "+ ",
        "  pmap_dfr(function(i, type, data){",
        "+ ",
        "    data %>% ",
        "+ ",
        "      mutate(",
        "+ ",
        "        A = c(rmvnorm(1, sigma = CovA[[!!type]])),",
        "+ ",
        "        C = c(rmvnorm(1, sigma = CovC)),",
        "+ ",
        "        E = rnorm(2, sd = sqrt(varE2)),",
        "+ ",
        "        y = A + C + E,",
        "+ ",
        "        k = if_else(type == \"DZ\", row_number(), 1L)",
        "+ ",
        "      )",
        "+ ",
        "  }) %>% ",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  select(i, j, k, type, y)",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n",
        "\nAttaching package: ‘Matrix’\n\n",
        "The following objects are masked from ‘package:tidyr’:\n\n    expand, pack, unpack\n\n",
        "\nAttaching package: ‘lme4’\n\n",
        "The following object is masked from ‘package:nlme’:\n\n    lmList\n\n",
        "> ",
        "library(gamm4)",
        "Loading required package: mgcv\n",
        "This is mgcv 1.8-38. For overview type 'help(\"mgcv-package\")'.\n",
        "This is gamm4 0.2-6\n\n",
        "> ",
        "saveRDS(dat, file = \"data/example_data.rds\")",
        "> ",
        "dat <- readRDS(\"data/example_data.rds\")",
        "> ",
        "head(dat)",
        "> ",
        "set.seed(123)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(nlme)",
        "> ",
        "n3 <- 1000 # twin pairs",
        "> ",
        "n2 <- 2 # siblings in each twin pair (obviously)",
        "> ",
        "n1 <- 1 # measurements per twin",
        "> ",
        "",
        "> ",
        "varA2 <- 2 # additive genetic component (A)",
        "> ",
        "varC2 <- 1 # common environment component (C)",
        "> ",
        "varE2 <- .1 # unique environment component (E)",
        "> ",
        "",
        "> ",
        "CovA <- list(",
        "+ ",
        "  MZ = varA2 * matrix(1, nrow = 2, ncol = 2),",
        "+ ",
        "  DZ = varA2 * matrix(c(1, .5, .5, 1), nrow = 2, ncol = 2)",
        "+ ",
        ")",
        "> ",
        "CovC <- varC2 * matrix(1, nrow = 2, ncol = 2)",
        "> ",
        "",
        "> ",
        "dat <- tibble(",
        "+ ",
        "  i = seq_len(n3), # pair ID",
        "+ ",
        "  type = sample(c(\"DZ\", \"MZ\"), n3, replace = TRUE)",
        "+ ",
        ") %>% ",
        "+ ",
        "  uncount(n2, .id = \"j\") %>% ",
        "+ ",
        "  nest_by(i, type, .keep = TRUE) %>% ",
        "+ ",
        "  pmap_dfr(function(i, type, data){",
        "+ ",
        "    data %>% ",
        "+ ",
        "      mutate(",
        "+ ",
        "        A = c(rmvnorm(1, sigma = CovA[[!!type]])),",
        "+ ",
        "        C = c(rmvnorm(1, sigma = CovC)),",
        "+ ",
        "        E = rnorm(2, sd = sqrt(varE2)),",
        "+ ",
        "        y = A + C + E,",
        "+ ",
        "        k = if_else(type == \"DZ\", row_number(), 1L)",
        "+ ",
        "      )",
        "+ ",
        "  }) %>% ",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  select(i, j, k, type, y)",
        "> ",
        "",
        "> ",
        "saveRDS(dat, file = \"data/example_data.rds\")",
        "> ",
        "dat",
        "\u001B[38;5;246m# A tibble: 2,000 × 5\u001B[39m\n       i     j     k type       y\n   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m     1     1     1 DZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m406\u001B[39m\n\u001B[38;5;250m 2\u001B[39m     1     2     2 DZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m351\u001B[39m\n\u001B[38;5;250m 3\u001B[39m     2     1     1 DZ    -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m96\u001B[39m \n\u001B[38;5;250m 4\u001B[39m     2     2     2 DZ    -\u001B[31m3\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m4\u001B[39m \n",
        "\u001B[38;5;250m 5\u001B[39m     3     1     1 DZ     0.284\n\u001B[38;5;250m 6\u001B[39m     3     2     2 DZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m254\u001B[39m\n\u001B[38;5;250m 7\u001B[39m     4     1     1 MZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m837\u001B[39m\n\u001B[38;5;250m 8\u001B[39m     4     2     1 MZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m704\u001B[39m\n\u001B[38;5;250m 9\u001B[39m     5     1     1 DZ     2.83 \n\u001B[38;5;250m10\u001B[39m     5     2     2 DZ     1.96 \n\u001B[38;5;246m# … with 1,990 more rows\u001B[39m\n",
        "> ",
        "set.seed(1233)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(mvtnorm)",
        "> ",
        "library(nlme)",
        "> ",
        "n3 <- 1000 # twin pairs",
        "> ",
        "n2 <- 2 # siblings in each twin pair (obviously)",
        "> ",
        "n1 <- 1 # measurements per twin",
        "> ",
        "",
        "> ",
        "varA2 <- 2 # additive genetic component (A)",
        "> ",
        "varC2 <- 1 # common environment component (C)",
        "> ",
        "varE2 <- .1 # unique environment component (E)",
        "> ",
        "",
        "> ",
        "CovA <- list(",
        "+ ",
        "  MZ = varA2 * matrix(1, nrow = 2, ncol = 2),",
        "+ ",
        "  DZ = varA2 * matrix(c(1, .5, .5, 1), nrow = 2, ncol = 2)",
        "+ ",
        ")",
        "> ",
        "CovC <- varC2 * matrix(1, nrow = 2, ncol = 2)",
        "> ",
        "",
        "> ",
        "dat <- tibble(",
        "+ ",
        "  i = seq_len(n3), # pair ID",
        "+ ",
        "  type = sample(c(\"DZ\", \"MZ\"), n3, replace = TRUE)",
        "+ ",
        ") %>% ",
        "+ ",
        "  uncount(n2, .id = \"j\") %>% ",
        "+ ",
        "  nest_by(i, type, .keep = TRUE) %>% ",
        "+ ",
        "  pmap_dfr(function(i, type, data){",
        "+ ",
        "    data %>% ",
        "+ ",
        "      mutate(",
        "+ ",
        "        A = c(rmvnorm(1, sigma = CovA[[!!type]])),",
        "+ ",
        "        C = c(rmvnorm(1, sigma = CovC)),",
        "+ ",
        "        E = rnorm(2, sd = sqrt(varE2)),",
        "+ ",
        "        y = A + C + E,",
        "+ ",
        "        k = if_else(type == \"DZ\", row_number(), 1L)",
        "+ ",
        "      )",
        "+ ",
        "  }) %>% ",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  select(i, j, k, type, y)",
        "> ",
        "",
        "> ",
        "saveRDS(dat, file = \"data/example_data.rds\")",
        "> ",
        "dat",
        "\u001B[38;5;246m# A tibble: 2,000 × 5\u001B[39m\n       i     j     k type        y\n   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m     1     1     1 DZ     1.54  \n\u001B[38;5;250m 2\u001B[39m     1     2     2 DZ    -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m847\u001B[39m \n\u001B[38;5;250m 3\u001B[39m     2     1     1 MZ     0.445 \n\u001B[38;5;250m 4\u001B[39m     2     2     1 MZ     1.12  \n\u001B[38;5;250m 5\u001B[39m     3     1     1 MZ     1.43  \n",
        "\u001B[38;5;250m 6\u001B[39m     3     2     1 MZ     1.64  \n\u001B[38;5;250m 7\u001B[39m     4     1     1 MZ     1.78  \n\u001B[38;5;250m 8\u001B[39m     4     2     1 MZ     1.85  \n\u001B[38;5;250m 9\u001B[39m     5     1     1 MZ     0.546 \n\u001B[38;5;250m10\u001B[39m     5     2     1 MZ     0.056\u001B[4m9\u001B[24m\n\u001B[38;5;246m# … with 1,990 more rows\u001B[39m\n\nRestarting R session...\n\n"
    ]
}